import java.io.*;
import java.util.*;

class Book {
    String title;
    String author;
    int year;

    Book(String title, String author, int year) {
        this.title = title;
        this.author = author;
        this.year = year;
    }

    public String toString() {
        return title + " by " + author + " (" + year + ")";
    }
}

class LibraryManagement {
    static ArrayList<Book> books = new ArrayList<>();
    static Scanner input = new Scanner(System.in);

    public static void main(String[] args) {
        loadBooks();

        int choice = 0;  // ‚úÖ FIX: initialized to 0
        do {
            System.out.println("\n===== üìö Library Management System üìö =====");
            System.out.println("1Ô∏è‚É£  Add Book");
            System.out.println("2Ô∏è‚É£  Show All Books");
            System.out.println("3Ô∏è‚É£  Search Book by Title");
            System.out.println("4Ô∏è‚É£  Remove Book by Title");
            System.out.println("5Ô∏è‚É£  Save & Exit");
            System.out.print("üëâ Enter your choice: ");

            try {
                choice = input.nextInt();
                input.nextLine();  // consume newline
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è  Invalid input! Please enter a number.");
                input.nextLine();  // clear buffer
                continue;
            }

            switch (choice) {
                case 1: addBook(); break;
                case 2: showBooks(); break;
                case 3: searchBook(); break;
                case 4: removeBook(); break;
                case 5: saveBooks(); break;
                default: System.out.println("‚ùå Invalid option, please try again.");
            }
        } while (choice != 5);
    }

    static void addBook() {
        System.out.print("üìñ Enter Book Title: ");
        String title = input.nextLine();
        System.out.print("‚úçÔ∏è Enter Author Name: ");
        String author = input.nextLine();
        System.out.print("üìÖ Enter Year of Publication: ");
        int year;
        try {
            year = input.nextInt();
            input.nextLine();
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è  Invalid year! Book not added.");
            input.nextLine();
            return;
        }

        books.add(new Book(title, author, year));
        System.out.println("‚úÖ Book Added Successfully!");
    }

    static void showBooks() {
        if (books.isEmpty()) {
            System.out.println("üì≠ No books available.");
        } else {
            System.out.println("\nüìö Current Books in Library:");
            for (Book b : books) {
                System.out.println("‚Ä¢ " + b);
            }
        }
    }

    static void searchBook() {
        System.out.print("üîç Enter Title to Search: ");
        String searchTitle = input.nextLine();
        boolean found = false;

        for (Book b : books) {
            if (b.title.equalsIgnoreCase(searchTitle)) {
                System.out.println("‚úÖ Found: " + b);
                found = true;
            }
        }
        if (!found) {
            System.out.println("‚ùå Book not found.");
        }
    }

    static void removeBook() {
        System.out.print("üóëÔ∏è Enter Title to Remove: ");
        String removeTitle = input.nextLine();
        boolean removed = books.removeIf(b -> b.title.equalsIgnoreCase(removeTitle));
        if (removed) {
            System.out.println("‚úÖ Book Removed Successfully!");
        } else {
            System.out.println("‚ùå Book not found.");
        }
    }

    static void saveBooks() {
        try (FileWriter writer = new FileWriter("books.txt")) {
            for (Book b : books) {
                writer.write(b.title + "," + b.author + "," + b.year + "\n");
            }
            System.out.println("üíæ Books saved successfully. Exiting...");
        } catch (IOException e) {
            System.out.println("‚ö†Ô∏è  Error saving books.");
        }
    }

    static void loadBooks() {
        try (BufferedReader reader = new BufferedReader(new FileReader("books.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 3) {
                    books.add(new Book(parts[0], parts[1], Integer.parseInt(parts[2])));
                }
            }
        } catch (IOException e) {
            // File might not exist yet ‚Äî that's fine
        }
    }
}
